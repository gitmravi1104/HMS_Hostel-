package com.hostelservice.controller;

@RestController
@RequestMapping("api/hostler")
@CrossOrigin(origins="*")
public class HostlerController {

//	@GetMapping
//	public String getAll()
//	{
//		return "coming soon";
//	}
//	
//	@GetMapping("/get")
//	public String getException()
//	{
//		throw new ResourceNotFoundException("you are too weak Now");
//	}
//	
	
	// serInterface :
	
	@Autowired
	private HostlerServiceInterface service;
	
	
	
	// to get All Hostlers :
	@GetMapping("/findAll")
	public ResponseEntity<List<HostlerDto>> getAll()
	{
		
		return service.getAll();
	}
	
	// to get  Hostlers Data By Mobile No:
		@GetMapping("/findByMobileNo/{mobileNo}")
		public ResponseEntity<HostlerDto>  getHostlerByMobileNo(@PathVariable @Pattern(regexp = "(^[6-9][0-9]{9}$)", message = "Hostler mobile number shpould be starts with  6 to 9  must be 10 digits") String mobileNo )
		{
			
			return service.getHostlerByMobileNo(mobileNo);
		}
	
	
	// to get All Hostler Data By Id:
		@GetMapping("/findById/{id}")
		public ResponseEntity<HostlerDto> getById(@PathVariable long id)
		{
			return service.getById(id);
		}
		
	// to post or create a hostler 
		@PostMapping("/createHostler")
		public ResponseEntity<String> createHostler(@Valid @RequestBody HostlerDto hostlerDto)
		{
			return service.createHostler(hostlerDto);
		}
		
		// to edita hostler with id
		
		@PutMapping("/editHostler/{id}")
		public ResponseEntity<String> editHostler(@PathVariable long id ,@Valid @RequestBody HostlerDto hostlerDto)
		{
			return service.editHostlerById(id,hostlerDto);
		}
		
		
		// to delete a hostler
		@DeleteMapping("/deleteHostler/{id}")
		public ResponseEntity<String> deleteHostler(@PathVariable long id)
			{
					return service.deleteHostler(id);
			}
}
