package com.hostelservice.dto;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.hostelservice.model.Hostel;

import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class HostlerDto {
	
    private long hostlerId;
    
    @NotBlank(message = "Hostler mobile number cannot be blank")
    @Pattern(regexp = "(^[6-9][0-9]{9}$)", message = "Hostler mobile number must be 10 digits")
    private String hostlerMobile;

    @NotBlank(message = "Hostler name is required")
    @Size(min = 2, max = 50, message = "Hostler name must be between 2 and 50 characters")
    private String hostlerName;

    @NotBlank(message = "Hostler email is required")
    @Email(message = "Hostler email must be a valid email address")
    private String hostlerEmail;

    @NotBlank(message = "Hostler's father name is required")
    @Size(min = 2, max = 50, message = "Father's name must be between 2 and 50 characters")
    private String hostlerFatherName;

    @NotBlank(message = "Hostler address is required")
    @Size(min = 5, max = 200, message = "Hostler address must be between 5 and 200 characters")
    private String hostlerAddress;

    @NotBlank(message = "Hostler college name is required")
    @Size(min = 2, max = 100, message = "College name must be between 2 and 100 characters")
    private String hostlerCollegeName;

    @NotBlank(message = "Hostler room number is required")
//    @Pattern(regexp = "^[0-9A-Za-z-]+$", message = "Hostler room number must be alphanumeric")
    private String hostlerRoomNo;
    
    
    @NotBlank(message = "Hostler mobile number cannot be blank")
    @Pattern(regexp = "(^[6-9][0-9]{9}$)", message = "Hostler mobile number must be 10 digits")
    private String altMobile;
    
    
//    @NotBlank(message = "Hostel id is required")
    @ManyToOne
    @JoinColumn(name = "hostel_id")
    @JsonBackReference
    private Hostel hostel;
    
    
}